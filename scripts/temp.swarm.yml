version: '3.9'

networks:
  vault_vault_network:
    external: true
  traefik_traefik-network:
    external: true
  kafka-network:
    external: true

services:
  api:
    image: ${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}-api:latest
    networks:
      - vault_vault_network
      - traefik_traefik-network
      - kafka-network
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRING}
      JWT__Secret: ${JWT_SECRET}
      JWT__JwtExpireHours: "24"
      JeeAccount__API: ${JEEACCOUNT_API}
      JeeCustomer__API: ${JEECUSTOMER_API}
      secrectkey__JeeAccount: ${JEEACCOUNT_SECRET}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_traefik-network
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${PROJECT_NAME}-api-http.rule=Host(`customer-api.${DOMAIN}`)
        - traefik.http.routers.${PROJECT_NAME}-api-http.entrypoints=http
        - traefik.http.routers.${PROJECT_NAME}-api-http.middlewares=https-redirect
        - traefik.http.routers.${PROJECT_NAME}-api-https.rule=Host(`customer-api.${DOMAIN}`)
        - traefik.http.routers.${PROJECT_NAME}-api-https.entrypoints=https
        - traefik.http.routers.${PROJECT_NAME}-api-https.tls=true
        - traefik.http.routers.${PROJECT_NAME}-api-https.tls.certresolver=le
        - traefik.http.services.${PROJECT_NAME}-api.loadbalancer.server.port=80

  backend:
    image: ${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}-backend:latest
    networks:
      - traefik_traefik-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_traefik-network
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${PROJECT_NAME}-backend-http.rule=Host(`customer.${DOMAIN}`)
        - traefik.http.routers.${PROJECT_NAME}-backend-http.entrypoints=http
        - traefik.http.routers.${PROJECT_NAME}-backend-http.middlewares=https-redirect
        - traefik.http.routers.${PROJECT_NAME}-backend-https.rule=Host(`customer.${DOMAIN}`)
        - traefik.http.routers.${PROJECT_NAME}-backend-https.entrypoints=https
        - traefik.http.routers.${PROJECT_NAME}-backend-https.tls=true
        - traefik.http.routers.${PROJECT_NAME}-backend-https.tls.certresolver=le
        - traefik.http.services.${PROJECT_NAME}-backend.loadbalancer.server.port=80